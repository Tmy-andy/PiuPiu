#!/bin/bash
# bump_version.sh
# Script tƒÉng phi√™n b·∫£n d·ª±a tr√™n commit message:
#   [major] -> tƒÉng MAJOR
#   [minor] -> tƒÉng MINOR
#   m·∫∑c ƒë·ªãnh -> tƒÉng PATCH
# ƒê·ªìng th·ªùi c·∫≠p nh·∫≠t changelog.txt

VERSION_FILE="version.txt"
CHANGELOG_FILE="changelog.txt"

# N·∫øu version.txt ch∆∞a t·ªìn t·∫°i, t·∫°o m·ªõi
if [ ! -f "$VERSION_FILE" ]; then
    echo "v1.0.0" > "$VERSION_FILE"
    echo "T·∫°o m·ªõi version.txt v·ªõi phi√™n b·∫£n v1.0.0"
fi

# ƒê·ªçc version hi·ªán t·∫°i
CURRENT_VERSION=$(cat "$VERSION_FILE")
VERSION_NUM=${CURRENT_VERSION#v}
IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUM"

# L·∫•y commit message g·∫ßn nh·∫•t
COMMIT_MSG=$(git log -1 --pretty=%B)

# X√°c ƒë·ªãnh lo·∫°i bump
if echo "$COMMIT_MSG" | grep -qi "\[major\]"; then
    BUMP_TYPE="major"
elif echo "$COMMIT_MSG" | grep -qi "\[minor\]"; then
    BUMP_TYPE="minor"
else
    BUMP_TYPE="patch"
fi

# TƒÉng version
case "$BUMP_TYPE" in
  major)
    MAJOR=$((MAJOR + 1))
    MINOR=0
    PATCH=0
    ;;
  minor)
    MINOR=$((MINOR + 1))
    PATCH=0
    ;;
  patch)
    PATCH=$((PATCH + 1))
    ;;
esac

# Ghi version m·ªõi
NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
echo "$NEW_VERSION" > "$VERSION_FILE"
echo "Phi√™n b·∫£n m·ªõi: $NEW_VERSION"

# C·∫≠p nh·∫≠t changelog.txt v·ªõi commit message
NOW=$(date +"%d-%m-%Y %H:%M")
echo "$NOW ‚Äî üöÄ ${COMMIT_MSG}" > "$CHANGELOG_FILE"
echo "C·∫≠p nh·∫≠t $CHANGELOG_FILE v·ªõi commit message m·ªõi nh·∫•t."